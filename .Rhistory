install.packages("ROCR")
install.packages("partykit")
install.packages("e1071")
install.packages("car")
install.packages("glmnet")
install.packages("arules")
install.packages("arulesViz")
install.packages("arulesSequences")
install.packages("wordcloud")
install.packages("tm")
install.packages("twitteR")
install.packages("plyr")
install.packages ("stringr")
install.packages ("shiny")
install.packages ("TTR")
install.packages("xlsx")
install.packages("data.table")
install.packages("MASS")
install.packages("ggplot2")
install.packages("RODBC")
install.packages("treemap")
install.packages("dplyr")
install.packages("installr")
install.packages("sqldf")
install.packages("XLConnect")
install.packages("caret")
install.packages("chron")
install.packages("Rglpk")
install.packages("markovchain")
install.packages("queueing")
install.packages("projmanr")
install.packages("igraph")
install.packages("ggmap")
mean(mtcars$mpg)
data(iris)
View(iris)
View(iris)
View(iris)
sessionInfo()
setwd("~/")
setwd("~/")
setwd("C:\Users\10012191\Desktop\appdensitycalculation")
setwd(C:\Users\10012191\Desktop\appdensitycalculation)
ls
setwd("~/")
setwd("~/")
citydensity = read.csv(file="citydensity.csv", head=TRUE)
citydensity = read.csv(file="CityDensity.csv", head=TRUE)
setwd("C:/Users/10012191/Desktop/appdensitycalculation")
citydensity = read.csv(file="CityDensity.csv", head=TRUE)
citydensity = read.csv(file="CityDensity.csv", head=TRUE)
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
View(populationData)
View(regionAreaData)
#Review datasets
View(populationData)
library(dplyr)
group_by(populationDate, add = FALSE)
group_by(populationData, add = FALSE)
group_by(populationData,  populationData$CityProvince, add = FALSE)
group_by(populationData,  populationData$CityProvince)
View(populationData)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
summarize(populationDataGroupedByCityProvince, count = n())
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, count = n())
View(populationDataGroupedByCityProvinceWithCount)
View(populationData)
View(populationData)
View(populationData)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince, populationData$Population)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, count = n())
View(populationDataGroupedByCityProvinceWithCount)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince, populationData$Population)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince,  populationData$Population)
View(populationDataGroupedByCityProvinceWithCount)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvinceWithCount)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvinceWithCount)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvinceWithCount)
View(regionAreaData)
View(regionAreaData)
View(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvinceWithCount)
View(populationDataGroupedByCityProvinceWithCount)
View(populationData)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
#Review datasets
View(populationData)
View(regionAreaData)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvinceWithCount)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvinceWithCount)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvinceWithCount)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData,  populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
# View(populationDataGroupedByCityProvinceWithCount)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince$Region, populationDataGroupedByCityProvince, population = sum(Population))
# View(populationDataGroupedByCityProvinceWithCount)
View(populationDataGroupedByCityProvince)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(Region, populationDataGroupedByCityProvince, population = sum(Population))
# View(populationDataGroupedByCityProvinceWithCount)
View(populationDataGroupedByCityProvince)
populationData
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince,Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, populationData$Region, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, populationData$Region, populationData$CityProvince)
View(populationDataGroupedByCityProvince)
View(populationData)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, populationDataGroupedByCityProvince$Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, populationData$Region, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, populationData$Region, populationData$CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, Region, population = sum(Population))
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, Region, population = sum(Population))
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvinceWithCount)
View(regionAreaData)
View(regionAreaData)
merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(populationDataGroupedByCityProvinceWithCount)
deliverytime = read.csv(file="deliverytime.csv", head=TRUE)
library(pastecs)
options(scipen = 100, digits = 2)
stat.desc(deliverytime)
summary(deliverytime)
deliverytime
sdeliverytime = deliverytime
sdeliverytime$deltime = (deliverytime$deltime - mean(deliverytime$deltime))/sd(deliverytime$deltime)
cor(deliverytime$ncases, deliverytime$deltime)
NDelTime = (20 - mean(deliverytime$deltime))/sd(deliverytime$deltime)
NCases = (3- mean(deliverytime$ncases))/sd(deliverytime$ncases)
Distances = ((sdeliverytime$deltime-NDelTime)^2 + (sdeliverytime$ncases-NCases)^2)^0.5
which.max(Distances)
which.min(Distances)
heisenberg = read.csv("simple.csv")
trial = c("A","C","D")
cost = c(11.4, 3.3, 1.1)
trialcost = data.frame(trial,cost)
trialcost
x= array(c(1,3,2,4), dim=c(2,2))
x
y= array(c(4,2,3,1), dim=c(2,2))
y
colbinded = cbind(x,y)
rowbinded = rbind(x,y)
rowbinded
heisenberg = read.csv("simple.csv")
heisenberg$smass = (heisenberg$mass-min(heisenberg$mass))/(max(heisenberg$mass)-min(heisenberg$mass))*(5-1)+1
heisenberg
heisenberg$svelocity = (heisenberg$velocity-mean(heisenberg$velocity))/sd(heisenberg$ velocity)
heisenberg
heisenberg = read.csv("simple.csv")
bins = 2
range = max(heisenberg$mass)-min(heisenberg$mass)
cutpoints=seq(from = min(heisenberg$mass), to = max(heisenberg$mass), by = range/bins)
cutpoints
heisenberg$discretemass =cut(heisenberg$mass,  cutpoints, include.lowest=TRUE, labels=c("Low",  "High"))
heisenberg
heisenberg$discretevelocity =cut(heisenberg$velocity,  bins, include.lowest=TRUE, labels=c("LOW", "HIGH"))
heisenberg
heisenberg = read.csv("simple.csv")
indicators=model.matrix( ~ trial-1, data = heisenberg)
heisenberg = cbind(heisenberg,indicators)
heisenberg
library('dplyr')
flights = read.csv('flights.csv')
filtered = filter(flights, month ==1 ,day==1)
view(filtered)
filtered
View(filtered)
head(flights)
tail(flights)
colnames(flights)
filtered = filter(flights, month ==1 | month==7)
slice(flights, 1:10)
test = arrange(flights, year, month,day)
test
select(flights, year, month, day)
select(flights, -(year:day))
distinct(select(flights,origin,dest))
delayed = mutate(flights, gain = arr_delay - dep_delay, speed = distance / air_time * 60, gain_per_hour = gain / (air_time / 60))
View(delayed)
meandelay = summarise(flights,delay = mean(dep_delay, na.rm = TRUE))
meandelay
by_tailnum = group_by(flights, tailnum)
delay = summarise(by_tailnum, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm = TRUE))
delay = filter(delay, count > 20, dist < 2000)
View(delay)
destinations = group_by(flights, dest)
destsummary = summarise(destinations, planes = n_distinct(tailnum), flights = n(), delay = mean(dep_delay, na.rm = TRUE))
View(destsummary)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(populationDataGroupedByCityProvinceWithCount)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
View(mergedPopulationDataAndRegionData)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count())
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count())
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count(Region))
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
distinct(select(flights,origin,dest))
distinct(select(flights,origin,dest))
count(mergedPopulationDataAndRegionData, "Region")
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region", mergedPopulationDataAndRegionData)
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region", count(mergedPopulationDataAndRegionData, "Region"))
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population),count=n())
=
View(mergedPopulationDataAndRegionData)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count=n())
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count=n())
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
# distinct(select(flights,origin,dest))
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count=n(Region))
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population), count=n("Region"))
count(populationDataGroupedByCityProvinceWithCount, "Region")
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount, "Region")
View(mergedPopulationDataAndRegionData)
# distinct(select(flights,origin,dest))
mergedPopulationDataAndRegionDataAndTally = merge(populationDataGroupedByCityProvinceWithCount, tallyOfCityPerRegion, by = "Region")
View(mergedPopulationDataAndRegionData)
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount, "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount, "Region")
View(tallyOfCityPerRegion)
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
View(tallyOfCityPerRegion)
View(tallyOfCityPerRegion)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
View(mergedPopulationDataAndRegionData)
# distinct(select(flights,origin,dest))
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
View(mergedPopulationDataAndRegionDataAndTally)
# distinct(select(flights,origin,dest))
View(tallyOfCityPerRegion)
View(tallyOfCityPerRegion)
View(mergedPopulationDataAndRegionDataAndTally)
View(mergedPopulationDataAndRegionDataAndTally)
delayed = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
View(delayed)
View(delayed)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
View(mergedPopulationDataAndRegionDataAndTally)
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
# distinct(select(flights,origin,dest))
View(mergedPopulationDataAndRegionDataAndTallyWithCityArea)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = Population/landAreaOfCity)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
View(finalDataSet)
arrange(finalDataSet, populationDensity)
arrange(finalDataSet, desc(populationDensity))
View(finalDataSet)
output = arrange(finalDataSet, desc(populationDensity))
View(output)
View(mergedPopulationDataAndRegionData)
View(mergedPopulationDataAndRegionData)
View(populationDataGroupedByCityProvinceWithCount)
View(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
View(mergedPopulationDataAndRegionDataAndTallyWithCityArea)
output = arrange(finalDataSet, desc(populationDensity))
View(output)
View(output)
head(output, n=5)
topFiveCity = head(output, n=5)
View(topFiveCity)
View(topFiveCity)
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByCityProvince = group_by(populationData, Region, CityProvince)
View(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvince)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByCityProvince, population = sum(Population))
View(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvince)
View(populationDataGroupedByCityProvinceWithCount)
View(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
View(mergedPopulationDataAndRegionData)
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
View(tallyOfCityPerRegion)
View(tallyOfCityPerRegion)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
View(mergedPopulationDataAndRegionDataAndTally)
View(mergedPopulationDataAndRegionDataAndTally)
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
View(finalDataSet)
View(finalDataSet)
output = arrange(finalDataSet, desc(populationDensity))
View(output)
View(output)
topFiveCityWithHighestDensity = head(output, n=5)
View(topFiveCityWithHighestDensity)
View(topFiveCityWithHighestDensity)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
View(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
View(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
mergedPopulationDataAndRegionData = merge(populationDataGroupedByCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
output = arrange(finalDataSet, desc(populationDensity))
topFiveCityWithHighestDensity = head(output, n=5)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
View(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
mergedPopulationDataAndRegionData = merge(populationDataGroupedByBaranggayRegionCityProvinceWithCount, regionAreaData, by = "Region")
View(mergedPopulationDataAndRegionData)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByBaranggayRegionCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
output = arrange(finalDataSet, desc(populationDensity))
topFiveCityWithHighestDensity = head(output, n=5)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByBaranggayRegionCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
output = arrange(finalDataSet, desc(populationDensity))
topFiveCityWithHighestDensity = head(output, n=5)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
regionAreaData = read.csv(file="regionarea.csv", head=TRUE)
populationDataGroupedByBaranggay = group_by(populationData, Region, CityProvince, Barangay)
populationDataGroupedByBaranggayRegionCityProvinceWithCount = summarize(populationDataGroupedByBaranggay, population = sum(Population))
mergedPopulationDataAndRegionData = merge(populationDataGroupedByBaranggayRegionCityProvinceWithCount, regionAreaData, by = "Region")
tallyOfCityPerRegion = count(populationDataGroupedByBaranggayRegionCityProvinceWithCount)
mergedPopulationDataAndRegionDataAndTally = merge(mergedPopulationDataAndRegionData, tallyOfCityPerRegion, by = "Region")
mergedPopulationDataAndRegionDataAndTallyWithCityArea = mutate(mergedPopulationDataAndRegionDataAndTally, landAreaOfCity = Area/n)
finalDataSet = mutate(mergedPopulationDataAndRegionDataAndTallyWithCityArea, populationDensity = population/landAreaOfCity)
output = arrange(finalDataSet, desc(populationDensity))
topFiveCityWithHighestDensity = head(output, n=5)
# GROUP 3 (Alejandro, Dizon, Kuo, Matias, Pena)
#Use Library dplyr
library(dplyr)
# Load the datasets
populationData = read.csv(file="population.csv", head=TRUE)
